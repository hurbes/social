version: '3.1'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    depends_on:
      - mongo
      - auth
      - posts
      - redis
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3001:3001

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000

  posts:
    build:
      context: .
      dockerfile: ./apps/posts/Dockerfile
      target: development
    command: npm run start:dev posts
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3500:3500

  comment:
    build:
      context: .
      dockerfile: ./apps/comment/Dockerfile
      target: development
    command: npm run start:dev comment
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - auth
      - posts
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3002:30002

  redis:
    image: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - dbdata6:/data/db

volumes:
  dbdata6:
